Invert a binary tree.
::

                 4
               /   \
              2     7
             / \   / \
            1   3 6   9
to

::

                 4
               /   \
              7     2
             / \   / \
            9   6 3   1
code:
::
 
             /**
            * Definition for a binary tree node.
            * public class TreeNode {
            *     int val;
            *     TreeNode left;
            *     TreeNode right;
            *     TreeNode(int x) { val = x; }
            * }
            */
            public class Solution {
                public TreeNode invertTree(TreeNode root) {
                   if (root == null){
                       return root;
                       }
                       TreeNode temp = root.left;
                       root.left = root.right;
                       root.right = temp;
                       invertTree(root.left);
                       invertTree(root.right);
                       return root;
              }
           }
    /*
      Solution written by python.Easy and short. ps:HeavyHuang is a stupid guy.
        if root is None:
            return None
        root.left, root.right = self.invertTree(root.right), self.invertTree(root.left)
        return root
    
    */
