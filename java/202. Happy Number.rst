Write an algorithm to determine if a number is "happy".

A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.

code:
::
 
  public class Solution {
    Set<Integer> set = new HashSet<Integer>();
    public boolean isHappy(int n) {
        int sum = 0;
        int temp = 0;
        while (n != 1) {
            while (n % 10 == 0){
                n /= 10;
            }
            while (n >= 10) {
                temp = n % 10;
                n = (n - temp) / 10;
                sum += temp * temp;
                System.out.println(sum +" "+n+" "+temp);
            }
            sum += n * n;
            n = sum;
            if (set.contains(n)){return false;}
            set.add(n);
            System.out.println(n);
            sum = 0;
        }
        return true;
    }
  }
